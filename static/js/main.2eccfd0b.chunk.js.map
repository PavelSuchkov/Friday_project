{"version":3,"sources":["main/ui/components/common/c2-SuperButton/SuperButton.module.css","main/ui/components/common/c1-SuperInputText/SuperInputText.module.css","main/ui/components/common/c3-SuperCheckbox/SuperCheckbox.module.css","main/ui/pages/Login.tsx","main/ui/pages/Profile.tsx","main/ui/pages/Registration.tsx","main/ui/pages/PasswordRecovery.tsx","main/ui/pages/EnterNewPassword.tsx","main/ui/pages/Error404.tsx","main/ui/components/NavBar.tsx","main/ui/components/common/c1-SuperInputText/SuperInputText.tsx","main/ui/components/common/c2-SuperButton/SuperButton.tsx","main/ui/components/common/c3-SuperCheckbox/SuperCheckbox.tsx","main/ui/pages/TestPage.tsx","main/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Login","Profile","Registration","PasswordRecovery","EnterNewPassword","Error404","NavBar","to","activeClassName","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","superInput","e","currentTarget","value","key","placeholder","SuperButton","red","finalClassName","default","button","name","SuperCheckbox","onChangeChecked","children","checkbox","checked","TestPage","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2eccfd0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__5_lGg\",\"button\":\"SuperButton_button__3xrU5\",\"red\":\"SuperButton_red__3Tts3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__38CwD\",\"errorInput\":\"SuperInputText_errorInput__1aCuE\",\"error\":\"SuperInputText_error__2cUsR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__F633k\",\"spanClassName\":\"SuperCheckbox_spanClassName__3QA14\"};","import React from 'react';\r\n\r\n\r\n export const Login = () => {\r\n    return (\r\n        <div>Login Page</div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const Profile = () =>{\r\n    return(\r\n        <div>Profile</div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const Registration = () =>{\r\n    return(\r\n        <div>Registration Page</div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const PasswordRecovery = () => {\r\n    return (\r\n        <div>\r\n            <div>PasswordRecovery</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const EnterNewPassword = () =>{\r\n    return(\r\n        <div>EnterNewPassword</div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const NavBar = () => {\r\n    return <nav>\r\n        <div><NavLink to=\"/login\" activeClassName={''}>Login</NavLink></div>\r\n        <div><NavLink to=\"/registration\" activeClassName={''}>Registration</NavLink></div>\r\n        <div><NavLink to=\"/profile\" activeClassName={''}>Profile</NavLink></div>\r\n        <div><NavLink to=\"/recovery\" activeClassName={''}>Password Recovery</NavLink></div>\r\n        <div><NavLink to=\"/recovery\" activeClassName={''}>Enter new password</NavLink></div>\r\n        <div><NavLink to=\"/404\" activeClassName={''}>Page not found</NavLink></div>\r\n    </nav>\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = /*${s.errorInput}*/ `${s.superInput} ${className}  ? ${error} : \"`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={'enter ur text'}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\n// export default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className} ${s.button}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            name={'button'}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >Button</button>\r\n    );\r\n}\r\n\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\n// export default SuperCheckbox;\r\n","import React from 'react';\r\nimport {SuperInputText} from \"../components/common/c1-SuperInputText/SuperInputText\";\r\nimport {SuperButton} from \"../components/common/c2-SuperButton/SuperButton\";\r\nimport {SuperCheckbox} from \"../components/common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\n\r\nexport const TestPage = () => {\r\n    return (\r\n        <div>\r\n            <SuperInputText/>\r\n            <SuperButton/>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {Login} from \"./ui/pages/Login\";\nimport {Profile} from \"./ui/pages/Profile\";\nimport {Registration} from \"./ui/pages/Registration\";\nimport {PasswordRecovery} from \"./ui/pages/PasswordRecovery\";\nimport {EnterNewPassword} from \"./ui/pages/EnterNewPassword\";\nimport {Error404} from \"./ui/pages/Error404\";\nimport {NavBar} from \"./ui/components/NavBar\";\nimport {TestPage} from \"./ui/pages/TestPage\";\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <NavBar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/login' render={() => <Login/>}/>\n                    <Route path='/registration' render={() => <Registration/>}/>\n                    <Route path='/profile' render={() => <Profile/>}/>\n                    <Route path='/recovery' render={() => <PasswordRecovery/>}/>\n                    <Route path='/recovery' render={() => <EnterNewPassword/>}/>\n                    <Route path='/404' render={() => <Error404/>}/>\n                    <TestPage/>\n\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n{/*hr / prov*/\n}\n{/*Header with navLinks*/\n}\n{/*Main*/\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}